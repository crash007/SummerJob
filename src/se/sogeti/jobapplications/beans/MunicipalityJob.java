package se.sogeti.jobapplications.beans;

import java.sql.Date;
import java.util.List;

import se.sogeti.jobapplications.interfaces.Requirements;
import se.sogeti.periodsadmin.beans.Period;
import se.unlogic.standardutils.dao.annotations.DAOManaged;
import se.unlogic.standardutils.dao.annotations.Key;
import se.unlogic.standardutils.dao.annotations.ManyToOne;
import se.unlogic.standardutils.dao.annotations.OneToMany;
import se.unlogic.standardutils.dao.annotations.OneToOne;
import se.unlogic.standardutils.dao.annotations.Table;
import se.unlogic.standardutils.xml.XMLElement;

@Table(name = "summer_job_municipality_job")
@XMLElement
public class MunicipalityJob implements Requirements{

	@DAOManaged(autoGenerated=true)
	@Key
	private Integer id;
	
	@DAOManaged
	@XMLElement
	private Date created;
	
	@DAOManaged
	@XMLElement
	private Date updated;
	
	@DAOManaged(columnName="workplaceId")
	@XMLElement
	@ManyToOne(autoGet=true,autoAdd=true, autoUpdate=true, remoteKeyField="id")
	private Workplace workplace;
	
	@DAOManaged(columnName="manager_id")
	@XMLElement
	@ManyToOne(autoGet=true,autoAdd=true, autoUpdate=true, remoteKeyField="id")
	private Manager manager;
	
	@DAOManaged(columnName="periodId")
	@XMLElement
	@ManyToOne(autoGet=true,autoAdd=true, autoUpdate=true, remoteKeyField="id")
	private Period period;
	
	public Manager getManager() {
		return manager;
	}

	public void setManager(Manager manager) {
		this.manager = manager;
	}

	@DAOManaged
	@XMLElement
	private String workTitle;
	
	@DAOManaged
	@XMLElement
	private String workDescription;
	
	// Omr√•de, t.ex Barnomsorg
	@DAOManaged(columnName="areaId")
	@XMLElement
	@ManyToOne(remoteKeyField = "id", autoAdd = true, autoGet = true, autoUpdate = true)
	private Area area;
	
	@DAOManaged
	@XMLElement
	private Integer numberOfWorkersNeeded;
	
	@DAOManaged
	@XMLElement
	private Boolean approvedWorkplace;
	
	@DAOManaged
	@XMLElement
	private Date approvedDate;
	
	@DAOManaged
	@XMLElement
	private String approvedByUser;
	
	@DAOManaged
	@XMLElement
	private Boolean isOverEighteen;
	
	@DAOManaged
	@XMLElement
	private Boolean hasDriversLicense;
	
	@DAOManaged
	@XMLElement
	private String freeTextRequirements;
	
	
	@DAOManaged
	@XMLElement
	@OneToMany(autoGet=true,autoAdd=true, autoUpdate=true)
	private List<Mentor> mentors;
	
	@DAOManaged
	@XMLElement
	@OneToMany(autoGet=true,autoAdd=true, autoUpdate=true)
	private List<MunicipalityJobApplication> workers;
	
	@DAOManaged
	@XMLElement
	private String requirementsFreeText;
	
	
	public Integer getId() {
		return id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	public Date getCreated() {
		return created;
	}

	public void setCreated(Date created) {
		this.created = created;
	}

	public Date getUpdated() {
		return updated;
	}

	public void setUpdated(Date updated) {
		this.updated = updated;
	}

	public Workplace getWorkplace() {
		return workplace;
	}

	public void setWorkplace(Workplace workplace) {
		this.workplace = workplace;
	}

	public Period getPeriod() {
		return period;
	}

	public void setPeriod(Period period) {
		this.period = period;
	}

	public String getWorkTitle() {
		return workTitle;
	}

	public void setWorkTitle(String workTitle) {
		this.workTitle = workTitle;
	}

	public String getWorkDescription() {
		return workDescription;
	}

	public void setWorkDescription(String workDescription) {
		this.workDescription = workDescription;
	}

	public Area getArea() {
		return area;
	}

	public void setArea(Area area) {
		this.area = area;
	}

	public Integer getNumberOfWorkersNeeded() {
		return numberOfWorkersNeeded;
	}

	public void setNumberOfWorkersNeeded(Integer numberOfWorkersNeeded) {
		this.numberOfWorkersNeeded = numberOfWorkersNeeded;
	}

	public Boolean getApprovedWorkplace() {
		return approvedWorkplace;
	}

	public void setApprovedWorkplace(Boolean approvedWorkplace) {
		this.approvedWorkplace = approvedWorkplace;
	}

	public Date getApprovedDate() {
		return approvedDate;
	}

	public void setApprovedDate(Date approvedDate) {
		this.approvedDate = approvedDate;
	}

	public String getApprovedByUser() {
		return approvedByUser;
	}

	public void setApprovedByUser(String approvedByUser) {
		this.approvedByUser = approvedByUser;
	}

	public List<Mentor> getMentors() {
		return mentors;
	}

	public void setMentors(List<Mentor> mentors) {
		this.mentors = mentors;
	}

	public List<MunicipalityJobApplication> getWorkers() {
		return workers;
	}

	public void setWorkers(List<MunicipalityJobApplication> workers) {
		this.workers = workers;
	}

	public String getRequirementsFreeText() {
		return requirementsFreeText;
	}

	public void setRequirementsFreeText(String requirementsFreeText) {
		this.requirementsFreeText = requirementsFreeText;
	}
	
	
	@Override
	public String toString() {
		return workTitle + "(id: " + id + ")";
	}

	public Boolean getIsOverEighteen() {
		return isOverEighteen;
	}

	public String getFreeTextRequirements() {
		return freeTextRequirements;
	}

	public void setFreeTextRequirements(String freeTextRequirements) {
		this.freeTextRequirements = freeTextRequirements;
	}

	public void setIsOverEighteen(Boolean isOverEighteen) {
		this.isOverEighteen = isOverEighteen;
	}

	public Boolean getHasDriversLicense() {
		return hasDriversLicense;
	}

	public void setHasDriversLicense(Boolean hasDriversLicense) {
		this.hasDriversLicense = hasDriversLicense;
	}
	
}
